{"version":3,"sources":["assets/audio-clips/clock-over.mp3","assets/img/banner-img.png","assets/img/demo.png","assets/audio-clips/clock-tick.mp3","assets/audio-clips/clock-tick-edited.mp3","assets/img/banner-completed.png","components/Timer/Timer.jsx","components/FormInput/FormInput.jsx","pages/Layout.jsx","store/reducers.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Timer","props","state","seconds","showResult","resultMinutes","resultSeconds","minutes","hours","interval","timerValue","localStorage","getItem","handleResult","bind","timer","pad","goHome","time","rhours","rminutes","chours","crhours","cminutes","this","Math","floor","round","setState","currentTime","isNaN","split","setInterval","setItem","window","location","pathname","clearInterval","audio","document","getElementById","setTimeout","play","removeItem","setImage","d","toString","e","pause","sec","parseInt","className","onClick","to","id","loop","src","require","type","Component","connect","dispatch","value","FormInput","validator","validatorMessge","redirectTimer","setCurrentVal","startTimer","target","length","validatorMessage","maxLength","placeholder","name","required","onChange","htmlFor","setTimerValue","Layout","console","log","href","logo","alt","bannerImg","basename","path","bannerImageFinal","initialState","demoVal","rootReducer","action","store","createStore","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.22a7d2b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clock-over.25b35276.mp3\";","module.exports = __webpack_public_path__ + \"static/media/banner-img.293a4c7b.png\";","module.exports = __webpack_public_path__ + \"static/media/demo.8fe5331d.png\";","module.exports = __webpack_public_path__ + \"static/media/clock-tick.6c73b051.mp3\";","module.exports = __webpack_public_path__ + \"static/media/clock-tick-edited.dbf2f926.mp3\";","module.exports = __webpack_public_path__ + \"static/media/banner-completed.95a5ac28.png\";","import React, { Component } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {clockTick} from \"../../assets/audio-clips/clock-tick.mp3\";\r\nimport {clockOver} from \"../../assets/audio-clips/clock-over.mp3\";\r\n\r\nconst CLOCKUNIT = 59;\r\n\r\nclass Timer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      seconds: null,\r\n      showResult: false,\r\n      resultMinutes: '',\r\n      resultSeconds: '',\r\n      minutes: null,\r\n      hours: null,\r\n      interval: null,\r\n      timerValue: localStorage.getItem('timerValuelocal')\r\n    };\r\n\r\n    this.handleResult = this.handleResult.bind(this);\r\n    this.timer = this.timer.bind(this);\r\n    this.pad = this.pad.bind(this);\r\n    this.goHome = this.goHome.bind(this);\r\n\r\n    // console.log(this.props.timerValue);\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    // Time calculation\r\n    let time, hours, rhours, minutes, rminutes, chours, crhours, cminutes, crminutes;\r\n    time = this.state.timerValue;\r\n    if (time > 0) {\r\n      hours = time / 60;\r\n      rhours = Math.floor(hours) <= 0 ? 0 : Math.floor(hours) - 1;\r\n      minutes = (hours - rhours) * 60;\r\n      rminutes = Math.round(minutes) <= 0 ? 0 : Math.round(minutes) - 1;\r\n\r\n      // Condition to get exceeded minutes\r\n      if(rminutes > 59){\r\n        chours = rminutes / 60;\r\n        crhours = Math.floor(chours);\r\n        cminutes = (chours - crhours) * 60;\r\n        crminutes = Math.round(cminutes);\r\n\r\n        rhours = rhours + crhours;\r\n        rminutes = crminutes;\r\n      }\r\n\r\n      // Time values intialization\r\n      this.setState({\r\n        hours: this.pad(rhours),\r\n        minutes: this.pad(rminutes),\r\n        seconds: this.pad(CLOCKUNIT),\r\n      });\r\n    }\r\n\r\n    // Get time from local storage if available\r\n    let currentTime = localStorage.getItem(\"currentTime\");\r\n    if (currentTime) {\r\n      this.setState({\r\n        hours: isNaN(currentTime.split(\" \")[0])\r\n          ? \"00\"\r\n          : currentTime.split(\" \")[0],\r\n        minutes: isNaN(currentTime.split(\" \")[1])\r\n          ? \"00\"\r\n          : currentTime.split(\" \")[1],\r\n        seconds: currentTime.split(\" \")[2],\r\n      });\r\n    }\r\n\r\n    let interval = setInterval(() => {\r\n      //Reducing seconds\r\n      this.setState(({ seconds }) => ({\r\n        seconds: this.pad(seconds - 1),\r\n      }));\r\n\r\n      // Conditions to change hours & minutes in timer() functi\r\n      this.timer();\r\n\r\n      // Set current timer value in local storage\r\n      localStorage.setItem(\r\n        \"currentTime\",\r\n        this.state.hours + \" \" + this.state.minutes + \" \" + this.state.seconds\r\n      );\r\n\r\n      // Condition to clear timer in other pages\r\n      if (window.location.pathname === \"/\") {\r\n        clearInterval(interval);\r\n      }\r\n    }, 1000);\r\n    this.setState({ interval: interval });\r\n\r\n    //Audio init\r\n    const audio = document.getElementById(\"timerAudio\");\r\n    setTimeout(()=>{\r\n      // if(audio){\r\n        audio.play();\r\n      // }\r\n    },800);\r\n  }\r\n\r\n  goHome(){\r\n    localStorage.removeItem('currentTime');\r\n    this.props.setImage({\r\n      setImage: false\r\n    });\r\n  }\r\n\r\n  timer() {\r\n    if (this.state.seconds == \"00\") {\r\n      if (this.state.minutes > 0) {\r\n        this.setState({\r\n          minutes: this.pad(this.state.minutes - 1),\r\n          seconds: this.pad(CLOCKUNIT),\r\n        });\r\n      } else {\r\n        if (\r\n          this.state.hours === \"00\" &&\r\n          this.state.minutes === \"00\" &&\r\n          this.state.seconds === \"00\"\r\n        ) {\r\n          clearInterval(this.state.interval);\r\n          this.handleResult();\r\n        } else {\r\n          this.setState({\r\n            hours: this.pad(this.state.hours - 1),\r\n            minutes: this.pad(CLOCKUNIT),\r\n            seconds: this.pad(CLOCKUNIT),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  pad(d) {\r\n    return d < 10 ? \"0\" + d.toString() : d.toString();\r\n  }\r\n\r\n  handleResult(e) {\r\n    //Stops clock audio\r\n    document.getElementById(\"timerAudio\").pause();\r\n\r\n    //Enable clock end audio\r\n    document.getElementById('timerEnd').play();\r\n\r\n    // Stops timer\r\n    clearInterval(this.state.interval);\r\n\r\n    // API time calc\r\n    const APITime = this.state.timerValue;\r\n    let hours, rhours, minutes, rminutes, resultMinutes, resultSeconds;\r\n    hours = APITime / 60;\r\n    rhours = Math.floor(hours) <= 0 ? 0 : Math.floor(hours);\r\n    minutes = (hours - rhours) * 60;\r\n    rminutes = Math.round(minutes) <= 0 ? 0 : Math.round(minutes);\r\n\r\n    // rminutes = rhours >= 1 ? 60 : rminutes;\r\n    rminutes = rminutes === 0 ? 60 : rminutes;\r\n\r\n    // POST API call of all questions\r\n    if (this.state.hours && this.state.minutes) {\r\n      const sec = this.state.seconds === \"00\" ? 0 : 60 - this.state.seconds;\r\n      const time_taken =\r\n        parseInt(this.state.hours) * 60 +\r\n        parseInt(this.state.minutes) +\r\n        \".\" +\r\n        sec;\r\n        \r\n      if (time_taken === \"0.0\") {\r\n        // timer = rhours + rminutes + \".0\";\r\n        resultMinutes = rhours + rminutes;\r\n        resultSeconds = 0;\r\n\r\n      } else {\r\n        // Calculated current time with API time\r\n        // timer = this.pad(rminutes - (parseInt(this.state.minutes) + 1)) + \".\" + this.pad(sec);\r\n        resultMinutes = this.pad(rminutes - (parseInt(this.state.minutes) + 1));\r\n        resultSeconds = this.pad(sec)\r\n      }\r\n      // alert(`Timer running time: `+timer)\r\n      this.setState({\r\n        showResult: true,\r\n        resultMinutes: resultMinutes,\r\n        resultSeconds: resultSeconds\r\n      })\r\n    }\r\n\r\n    // Image change\r\n    this.props.setImage({\r\n      setImage: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { hours, minutes, seconds, showResult, resultMinutes, resultSeconds } = this.state;\r\n\r\n    let publishButton;\r\n\r\n    return (\r\n      <div className=\"nav-wrapper\">\r\n          {!showResult &&\r\n          <div className=\"navbar__timer\">\r\n            <span>{hours + \":\" + minutes + \":\" + seconds}</span>\r\n            <button className=\"start-timer stop-timer\" onClick={this.handleResult}>STOP TIMER</button>\r\n          </div>\r\n          }\r\n\r\n          {showResult &&\r\n          <div className=\"timer-result\">\r\n            <h4>Your Time Summary</h4>\r\n            <div className=\"timer-result__detail\">\r\n              <span><b>{resultMinutes}</b> Minutes</span>\r\n              <span><b>{resultSeconds}</b> Seconds</span>\r\n            </div>\r\n            {/* <button className=\"start-timer\">HOME</button> */}\r\n            <NavLink onClick={this.goHome} to={'/home'} className=\"start-timer\">\r\n                RESET TIMER\r\n            </NavLink>\r\n          </div>\r\n          }\r\n          <audio id=\"timerAudio\" loop>\r\n            <source src={require('../../assets/audio-clips/clock-tick-edited.mp3')} type=\"audio/mpeg\"></source>\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n\r\n          <audio id=\"timerEnd\">\r\n            <source src={require('../../assets/audio-clips/clock-over.mp3')} type=\"audio/mpeg\"></source>\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    timerValue: state.timerValue,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n      setImage: (value) => dispatch({ type: \"SET_IMAGE\", value }),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\r\n","import React, { Component } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass FormInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        timerValue: '',\r\n        validator: false,\r\n        validatorMessge: '',\r\n        redirectTimer: false\r\n    };\r\n\r\n    this.setCurrentVal = this.setCurrentVal.bind(this);\r\n    this.startTimer = this.startTimer.bind(this);\r\n\r\n    // console.log(this.props.timerValue);\r\n\r\n    //Clears prev value\r\n  }\r\n\r\n  componentDidMount(){\r\n    const audio = document.getElementById(\"timerAudio\");\r\n    if(audio){\r\n      audio.pause();\r\n    }\r\n    localStorage.removeItem('currentTime');\r\n  }\r\n\r\n  setCurrentVal(e){\r\n    // Validator condition on change\r\n    if(e.target.value!='' && this.state.validator){\r\n      this.setState({validator: false})\r\n    }\r\n    // Input element limit\r\n    if(e.target.value.length <= 6){\r\n      this.setState({\r\n        timerValue: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  startTimer(){\r\n    // Validator condition on start TImer\r\n    if(this.state.timerValue != ''){\r\n      // this.props.setTimerValue({timerValue: this.state.timerValue});\r\n      localStorage.setItem('timerValuelocal',this.state.timerValue);\r\n      this.setState({redirectTimer: true})\r\n    }else{\r\n      this.setState({\r\n        validator: true,\r\n        validatorMessage: '*Timer value required'\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { validatorMessage, validator, timerValue, redirectTimer } = this.state;\r\n\r\n    if(redirectTimer){\r\n      return <Redirect to={\"/timer\"} />\r\n    }\r\n\r\n    return (\r\n        <div className=\"timer-content__input\">\r\n            <div className=\"form__group field\">\r\n                <input type=\"number\" maxLength=\"6\" className=\"form__field\" placeholder=\"Name\" name=\"name\" id='name' required onChange={(e) => this.setCurrentVal(e)} value={timerValue}/>\r\n                <label htmlFor=\"name\" className=\"form__label\">Enter some minutes</label>\r\n            </div>\r\n            {validator && <span className=\"error-msg\">{validatorMessage}</span>}\r\n            <button className=\"start-timer\" onClick={this.startTimer}>START TIMER</button>\r\n            {/* <NavLink onClick={this.startTimer} to={`/timer`} className=\"start-timer\">\r\n                START TIMER\r\n            </NavLink> */}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        timerValue: state.timerValue,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setTimerValue: (value) => dispatch({ type: \"SET_TIMER_VALUE\", value }),\r\n    };\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormInput);","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Timer from \"../components/Timer/Timer\";\r\nimport FormInput from \"../components/FormInput/FormInput\";\r\nimport bannerImg from \"../assets/img/banner-img.png\";\r\nimport logo from \"../assets/img/demo.png\"\r\nimport { connect } from \"react-redux\";\r\nimport bannerImgFinal from \"../assets/img/banner-completed.png\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nclass Layout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    console.log(this.props.timerValue);\r\n  }\r\n\r\n  render() {\r\n    const { } = this.state;\r\n    // let bannerImage = !this.props.bannerImageFinal ? bannerImg : bannerImgFinal;\r\n    return (\r\n      <div className=\"timer fadein\">\r\n        <a href=\"https://github.com/Sathishvasi/sathish-timer-dev\" className=\"corner-ribbon\" target=\"_blank\">Github</a>\r\n        <div className=\"timer-header\">\r\n          <img src={logo} alt=\"Logo img\" />\r\n          <h5>SATHISH TIMER</h5>\r\n        </div>\r\n        <div className=\"timer-card\">\r\n          <div className=\"timer-banner\">\r\n            <img src={bannerImg} className=\"fadein\" alt=\"Banner\" />\r\n            {/* {!this.props.bannerImageFinal ? <img src={bannerImg} className=\"fadein\" alt=\"Banner\"/> : <img src={bannerImgFinal} className=\"fadein\" alt=\"Banner\"/>} */}\r\n          </div>\r\n          <div className=\"timer-content\">\r\n            <BrowserRouter basename=\"/sathish-timer/\">\r\n              <Switch>\r\n                <Route path=\"/home\"><FormInput /></Route>\r\n                <Route path=\"/timer\"><Timer /></Route>\r\n              </Switch>\r\n              <Redirect to=\"/home\"></Redirect>\r\n            </BrowserRouter>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    timerValue: state.timerValue,\r\n    bannerImageFinal: state.bannerImageFinal\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setTimerValue: (value) => dispatch({ type: \"SET_TIMER_VALUE\", value }),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);\r\n","const initialState = {\r\n  demoVal: 'sathish',\r\n  timerValue: '',\r\n  bannerImageFinal: false\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_TIMER_VALUE':\r\n      return {\r\n        ...state,\r\n        timerValue: action.value.timerValue,\r\n      }\r\n    case 'SET_IMAGE':\r\n      return {\r\n        ...state,\r\n        bannerImageFinal: action.value.setImage,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport \"assets/sass/styles.scss\";\r\nimport Layout from \"pages/Layout\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store/index\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Layout></Layout>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker === null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}